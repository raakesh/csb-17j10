{"version":3,"sources":["sidebar.js","App.js","index.js"],"names":["className","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","draggable","initialElements","id","type","data","label","name","position","x","y","App","reactFlowWrapper","useRef","useState","reactFlowInstance","setReactFlowInstance","elements","setElements","style","height","width","ref","onConnect","params","els","addEdge","onElementsRemove","elementsToRemove","removeElements","onLoad","_reactFlowInstance","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","onDragOver","dropEffect","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"6LAEe,G,MAAA,WAKb,OACE,+BACE,yBAAKA,UAAU,eAAf,sDAUA,yBACEA,UAAU,UACVC,YAAa,SAACC,GAAD,OAlBC,SAACA,EAAOC,GAC1BD,EAAME,aAAaC,QAAQ,wBAAyBF,GACpDD,EAAME,aAAaE,cAAgB,OAgBPL,CAAYC,EAAO,YAC3CK,WAAS,GAHX,kBCRAC,EAAkB,CACtB,CACEC,GAAI,IACJC,KAAM,UACNC,KAAM,CACJC,MACE,6CAEE,6BACA,2BAAOF,KAAK,OAAOD,GAAG,QAAQI,KAAK,YAIzCC,SAAU,CAAEC,EAAG,IAAKC,EAAG,KAGvBP,EAAK,EAGM,SAASQ,IACtB,IAAMC,EAAmBC,iBAAO,MAChC,EAAkDC,mBAAS,MAA3D,mBAAOC,EAAP,KAA0BC,EAA1B,KACA,EAAgCF,mBAASZ,GAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KAmCA,OACE,yBAAKxB,UAAU,WACb,kBAAC,IAAD,KACE,yBACEA,UAAU,oBACVyB,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACjCC,IAAKV,GAEL,kBAAC,IAAD,CACEK,SAAUA,EACVM,UA5CQ,SAACC,GAAD,OAAYN,GAAY,SAACO,GAAD,OAASC,YAAQF,EAAQC,OA6CzDE,iBA5Ce,SAACC,GAAD,OACvBV,GAAY,SAACO,GAAD,OAASI,YAAeD,EAAkBH,OA4C9CK,OA3CK,SAACC,GAAD,OACbf,EAAqBe,IA2CbC,OAtCK,SAACpC,GACdA,EAAMqC,iBACN,IAAMC,EAAkBtB,EAAiBuB,QAAQC,wBAC3ChC,EAAOR,EAAME,aAAauC,QAAQ,yBAClC7B,EAAWO,EAAkBuB,QAAQ,CACzC7B,EAAGb,EAAM2C,QAAUL,EAAgBM,KACnC9B,EAAGd,EAAM6C,QAAUP,EAAgBQ,MAE/BC,EAAU,CACdxC,GAxBQ,kBAAiBA,KAyBzBC,OACAI,WAEAH,KAAM,CACJC,MACE,6CAEE,6BACA,2BAAOF,KAAK,OAAOD,GAAG,QAAQI,KAAK,aAK3CW,GAAY,SAAC0B,GAAD,OAAQA,EAAGC,OAAOF,OAgBtBG,WA3CS,SAAClD,GAClBA,EAAMqC,iBACNrC,EAAME,aAAaiD,WAAa,SA2CxB,kBAAC,IAAD,QAGJ,kBAAC,EAAD,QClFR,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC1C,EAAD,OAEFqC,I","file":"static/js/main.86086a91.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default () => {\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">\r\n        You can drag these nodes to the pane on the right.\r\n      </div>\r\n      {/* <div\r\n        className=\"dndnode input\"\r\n        onDragStart={(event) => onDragStart(event, \"input\")}\r\n        draggable\r\n      >\r\n        Input Node\r\n      </div> */}\r\n      <div\r\n        className=\"dndnode\"\r\n        onDragStart={(event) => onDragStart(event, \"default\")}\r\n        draggable\r\n      >\r\n        Action Node\r\n      </div>\r\n      {/* <div\r\n        className=\"dndnode output\"\r\n        onDragStart={(event) => onDragStart(event, \"output\")}\r\n        draggable\r\n      >\r\n        Output Node\r\n      </div> */}\r\n    </aside>\r\n  );\r\n};\r\n","import React, { useState, useRef } from \"react\";\nimport ReactFlow, {\n  ReactFlowProvider,\n  addEdge,\n  removeElements,\n  Controls\n} from \"react-flow-renderer\";\nimport \"./styles.css\";\n\nimport Sidebar from \"./sidebar\";\n\nconst initialElements = [\n  {\n    id: \"1\",\n    type: \"default\",\n    data: {\n      label: (\n        <>\n          Action\n          <br />\n          <input type=\"text\" id=\"lname\" name=\"lname\" />\n        </>\n      )\n    },\n    position: { x: 250, y: 5 }\n  }\n];\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\n\nexport default function App() {\n  const reactFlowWrapper = useRef(null);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [elements, setElements] = useState(initialElements);\n  const onConnect = (params) => setElements((els) => addEdge(params, els));\n  const onElementsRemove = (elementsToRemove) =>\n    setElements((els) => removeElements(elementsToRemove, els));\n  const onLoad = (_reactFlowInstance) =>\n    setReactFlowInstance(_reactFlowInstance);\n  const onDragOver = (event) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = \"move\";\n  };\n  const onDrop = (event) => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const type = event.dataTransfer.getData(\"application/reactflow\");\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type,\n      position,\n      //data: { label: `${type} node` }\n      data: {\n        label: (\n          <>\n            Action\n            <br />\n            <input type=\"text\" id=\"lname\" name=\"lname\" />\n          </>\n        )\n      }\n    };\n    setElements((es) => es.concat(newNode));\n  };\n  return (\n    <div className=\"dndflow\">\n      <ReactFlowProvider>\n        <div\n          className=\"reactflow-wrapper\"\n          style={{ height: \"500px\", width: \"500px\" }}\n          ref={reactFlowWrapper}\n        >\n          <ReactFlow\n            elements={elements}\n            onConnect={onConnect}\n            onElementsRemove={onElementsRemove}\n            onLoad={onLoad}\n            onDrop={onDrop}\n            onDragOver={onDragOver}\n          >\n            <Controls />\n          </ReactFlow>\n        </div>\n        <Sidebar />\n      </ReactFlowProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}